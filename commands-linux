### filesystem
df -h               # list system drive capacity
    -a, --all
    -h, --human-readable
du -h [directory]   # gets size of directory. ending in "/" makes in include  the directory
    -a, --all
    -h, --human-readable
mkfs [device]
    -t, --type      # e.g. ext4
wipefs [device]     # wipes the filesystem on a drive. useful for removing paritions for pvcreate
    -a, --all
    -b, --backup    # creates signature backup to ~/wipefs-<devname>-<offset>.bak
    -f, --force
    -n, --no-act    # trial run without actual erasure
fdisk [device]      # creates partitions on disk


### files
rsync [source] [destination]    # syncs source files to destination files
    -r, --recursive
    --info=progress2            # adds overall progress bar
ln [target_path] [link_path]    # makes file link
    -f, --force                 # removes existing destination files
    -i, --interactive           # prompts whether to remove existing destination files
    -s, --symbolic              # makes symbolic link
scp [host_file] user@targethost:targetfile    # secure copy file
    -i [identify_file]
    -P [port]
    -r              # recursively copy files
    -s              # use sftp protocol instead of scp
rm [file]
    -f, --force
    -i              # prompt before every removal
    -I              # prompt before removal >3 or -r
    -r, -R, --recursive
    -d, --dir       # removes empty directories
find [directory] [tests]    # can be piped into other commands (|)
    -d, --depth             # process directory contents before directory itself. implied in -delete
    -maxdepth [levels]      # how many directory levels to go down. 0 means starting points only
    -mindepth [levels]      # how many directory levels to go down before finding. 0 means starting points only
    -mount                  # prevents descending into directories on other filesystems
   # tests (can use n [exact], +n [>n], or -n [<n])
    -amin [n]               # file last accessed n minutes ago
    -atime [n]              # file last access n*24hr ago
    -group [gname]          # file's group name or numeric GID
    -iname [pattern]        # same as -name but match is case-insensitive (fo* and F?? match Foo, FOO, foo, fOo, etc. *foo* will match .foo-bar
    -lname [pattern]        # symbolic link of [pattern]
    -mmin [n]               # file last modified n minutes ago
    -mtime [n]              # file last modified n*24 hours ago
    -name [pattern]         # file name. directory paths ignored.
    -nogroup                # no group corresponds to file's GID
    -nouser                 # no user corresponds to file's UID
    -path                   # file path
    -perm [mode]            # file permissions (octal or symbolic)
    -readable               # matches files currently readable by current user (according to permissions)
    -size [n]               # file size uses n units of space, indicated by: b=512-byte block, c=bytes, w=two-byte words, k=kibibytes (KiB, 1024 bytes), M=mebibytes (MiB, 1024² bytes), G=gibibytes (GiB, 1024³ bytes)
    -type [c]               # file type, c meaning: b=block (buffered) special, c=character (unbuffered) special, d=directory, p=named pipe (FIFO), f=regular file, l=symbolic link, s=socket, D=door (Solaris). Can separate with comma
    -user [uname]           # file's username or numeric UID
    -writable               # matches files currently writable by current user (according to permissions)
   # actions
    -delete                 # when testing (before using -delete), specify -depth since it's implied in -delete and will change the output
    -exec [command]         # executes [command] with the matching file as the argument. executed in the starting directory (security risk, use -execdir instead)
    -execdir [command]      # same as -exec but executes in the subdirectory containing the matched file
    -ls                     # run ls command
    -print                  # print full file name to console followed by newline character
    -print0                 # print full file name to console followed by null character
    -printf [format]        # print [format] to console. see man page for all formats. does not add newline character at end of string
    -f(ls,print/0/f) [file] # same as normal command but prints to [file]
    -prune              # does not descend into directory. ignored if -depth or -delete is used.
   # operators (can modify above flags, precedence in descending order)
    ( [expr] )          # force precedence. protection needed `( expr )` or \( [expr] \)
    ! [expr]            # not, protection needed
    [expr1] [expr2]     # and, can also use -a between
    [expr1] -o [expr2]  # or

### user/group management
useradd [user]
    -c, --comment [comment]         # use single quote ('comment'), often used for user's full name
    -e, --expiredate [date]         # format YYYY-MM-DD
    -g, --gid [group]               # can be group name or GID, must exist
    -G, -groups [group1,group2]     # same as above ^
    -m, --create-home               # create user home directory, disabled by default
    -M, --no-create-home            # prevents creation of user home directory
    -N, --no-user-group             # prevents creation of group with same name as user, must be used with -g or -G
    -r, --system                    # creates a system account (UID <1000), does not create a home directory unless -m is used
    -s, --shell [shell]             # default user shell (e.g., /bin/bash), uses default if not defined,
    -u, --uid [uid]                 # defines UID, iterates by default
    -U, --user-group                # create group with same name as user
groupadd [group]
    -g, --gid [GID]         # defines GID, iterates by default
    -r, --system            # creates system group (GID <1000)
getent passwd | awk -F: '{printf "%s | %s | %s | %s | '%s'\n",$3,$1,$2,$4,$5}' | sort -n | column -te -N UID,USER,PASS,GID,COMMENT -s "|" -o "|"    # lists all users and their UID, GID, and comment
getent group | awk -F: '{printf "%s | %s | %s\n",$3,$1,$4, "GID", "GROUP NAME", "MEMBERS"}' | sort -n | column -te -N GID,GROUP,ADDITIONAL USERS -s "|" -o "|"   # list all groups and their members

### general commands
shutdown [time]    # shutsdown server. time in hh:mm format or "+m" where m=minute. "now" is alias for "+0"
    -r, --reboot
reboot
    -f, --force    # immediate clean shutdown via system manager. specified twice = immediate shutdown without system manager
apt, nala
    update          # update package repository lists
    upgrade         # install package upgrades & dependencies. NEVER removes packages or dependencies
    full-upgrade    # same as upgrade but removes packages or dependencies if necessary (e.g. conflict)
    install
    reinstall
    remove          # removes all packaged data but leaves small modified user config files
    purge           # same as remove but also removes configs. does not affect data stored in ~
    autoremove      # removes packages installed as dependencies but are no longer needed. verify before with `apt mark`
    search          # search via regex for matching packages in repo source.list
    show            # shows info about specified package
    list            # lists packages satisfying specified criteria (--installed, --upgradable, --all-versions)
    edit-sources    # edit source.list. provides basic sanity checks
watch                               # repeats command
    -d, --differences[=permanent]   # highlights difference between successive updates. optional "permanent" will show all changes from first iteration
    -n, --interval [seconds]
visudo                              # edit the /etc/sudoers file. Ensure to save without ".temp"
ssh-keygen -t ed25519 -C "comment"  # generates SSH key
    -C [comment]
    -f [filename]
    -t [type]       # dsa, ecdsa, ecdsa-sk, ed25519, ed25519-sk, or rsa
sudo resolvectl flush-caches    # flushes DNS cache

### monitoring
    sensors         # shows current sensor temperatures (good to combine with `watch`)
    s-tui           # shows graphs of CPU usage, sensor temperatures, and core frequencies
    stress          # stress-tests components
        -c, --cpu       # spawns N workers spinning on sqrt()
        -t, --timeout   # timeout after N seconds

### docker
docker exec -i minecraft-vanilla-survival rcon-cli                                      # access minecraft rcon cli via terminal
docker run --name netshoot --rm -it --network [network] nicolaka/netshoot /bin/bash     # creates a container in [network] that has useful networking tools built in. useful for diagnosing network issues then removing
